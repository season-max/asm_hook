plugins {
    id 'com.android.library'
}

//拷贝 aar 到 libs 目录下
afterEvaluate {
    android.libraryVariants.all { variant ->
        def lastOutputFile = null
        variant.outputs.all { output ->
            if (output.outputFile != null && (output.outputFile.name.endsWith('.aar'))) {
                println "variant-->${variant.name}"
                lastOutputFile = output.outputFile
            }
        }
        println "lastOutputFile-->${lastOutputFile}"
        variant.assemble.doLast {
            println "11111-->${lastOutputFile}"
            if (lastOutputFile == null) return
            def outputPath = [project.rootDir, "toolsLibrary", "aars"].join(File.separator)
            println "2222-->${outputPath}"
            copy {
                from lastOutputFile
                into outputPath
                rename {
                    'toolsLibrary.aar'
                }
            }
        }
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.3.0'
}

apply plugin: 'com.github.dcendents.android-maven'

